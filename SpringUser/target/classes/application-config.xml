<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">


	
	<!-- JDBC 연결 속성 파일 장소 설정 -->
	<context:property-placeholder location="classpath:database/jdbc.properties" />
	
	<!-- JDBC 속성 파일 이용 DB 접속 -->
	<!-- DB를 이용할 거라면 항상 해줘야함 -->
	<!-- 따로 properties 파일을 이용해서 해줘도 되지만 직접 입력해주는 방법도 사용 가능함 (선택 자유) -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${oracle.driverClassName}" />
		<property name="url" value="${oracle.url}" />
		<property name="username" value="${oracle.username}" />
		<property name="password" value="${oracle.password}" />
	</bean>
	
	<!-- JDBC 자동 연결 객체 JdbcTemplate 빈 생성 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- Service & DAO Component 등록 -->
	<context:component-scan base-package="com.coderby.myapp.users.service"></context:component-scan>
	<context:component-scan base-package="com.coderby.myapp.users.dao"></context:component-scan>

	<!-- 다국어 지원 설정 빈 객체 생성 -->
	<!-- 이건 차차 이어서 하는 걸로! -->
	
	<!-- 트랜잭션 처리 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="*" propagation="REQUIRES_NEW"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="txPointcut" expression="execution(* com.coderby.myapp..*(..))" />
		<aop:advisor pointcut-ref="txPointcut" advice-ref="txAdvice"/>
	</aop:config>
	
	<tx:annotation-driven />

</beans>
